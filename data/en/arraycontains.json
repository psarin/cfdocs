{
	"name": "arrayContains",
	"type": "function",
	"description": "Used to determine if a value is in the given array, case-sensitive. Adobe CF and OpenBD return boolean. Lucee / Railo returns the numeric index if the value is found, 0 if not.",
	"related": [
		"arrayContains",
		"arrayFind",
		"arrayFindNoCase",
		"arrayFindAll",
		"arrayFindAllNoCase"
	],

	"params": [
		{
			"name": "array",
			"description": "The array in which to search.",
			"required": true,
			"default": "",
			"type": "array",
			"values": [],
			"base_param": "true"
		},
		{
			"name": "value",
			"description": "The value to search for in the array.",
			"required": true,
			"default": "",
			"type": "any",
			"values": []
		},
		{
			"name": "substringMatch",
			"description": " Lucee4.5+ If set to true then a substring match will also return an array position. This will only work with simple values. Passing true with complex objects will throw an exception.",
			"required": false,
			"default": "false",
			"type": "any",
			"values": []
		}
	],

	"versions": [
		{
			"name": "arrayContains",
			"group": "headless",
			"returns": "boolean",
			"syntax": "arrayContains(array, value)"
		},
		{
			"name": "contains",
			"group": "member",
			"returns": "boolean",
			"syntax": "array.contains(value)"
		}
	],

	"examples": [
		{
			"title": "Array Contains",
			"group": "headless",
			"description": "",
			"code": "someArray = [1,2,3];\nwriteDump(arrayContains(someArray,2));",
			"result": "true",
            "engines": {
                "coldfusion": {
                    "minimum_version": "9+"
                }
            }
		},
		{
			"title": "Array Contains",
			"group": "headless",
			"description": "Lucee4.5+",
			"code": "someArray = [1,2,3];\nwriteDump(arrayContains(someArray,2));",
			"result": "2",
            "engines": {
                "lucee": {
                    "minimum_version": "4.5+"
                }
            }
		},
		{
			"title": "Substring Search",
			"group": "headless",
			"description": "Lucee4.5+",
			"code": "words = [ 'hello' , 'world' ];\npositionOfSubstring = arrayContains( words, 'el', true );\nwriteDump(positionOfSubstring);",
			"result": "1",
            "engines": {
                "lucee": {
                    "minimum_version": "4.5+"
                }
            }
		},
		{
			"title": "Array Contains (member function)",
			"group": "member",
			"description": "CF10+",
			"code": "someArray = [1,2,3];\nwriteDump(someArray.contains(2));",
			"result": "true",
            "engines": {
                "coldfusion": {
                    "minimum_version": "10+"
                }
            }
		},
		{
			"title": "Array Contains (member function)",
			"group": "member",
			"description": "Lucee4.5+",
			"code": "someArray = [1,2,3];\nwriteDump(someArray.contains(2));",
			"result": "2",
            "engines": {
                "lucee": {
                    "minimum_version": "4.5+"
                }
            }
		}
	],

	"engines": {
		"coldfusion": {
			"minimum_version": "",
			"notes": "",
			"docs": "https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-functions/functions-a-b/arraycontains.html"
		},
		"lucee": {
			"minimum_version": "",
			"notes": "Returns the position of the array instead of boolean value.",
			"docs": "https://docs.lucee.org/reference/functions/arraycontains.html"
		},
		"openbd": {
			"minimum_version": "",
			"notes": "",
			"docs": "http://openbd.org/manual/?/function/arraycontains"
		}
	},

	"links": []
}
